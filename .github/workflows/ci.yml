# .github/workflows/ci.yml
name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 3 * * *'     # nightly at 03:00 UTC
  workflow_dispatch:       # manual trigger

permissions:
  contents: read
  actions:  read
  packages: write

jobs:
  lint-test-security:
    name: Lint, Test & Security
    runs-on: ubuntu-latest
    env:
      # se in futuro servono segreti per i test, inserirli qui:
      # OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint with flake8
        run: |
          pip install flake8
          flake8 . --max-line-length=120 \
            --ignore=E221,E302,E303,E402,E241,E305,E272,W291,W292,W293,W391,E226,E401,F401,F811,F821,F841,E501 \
            --exclude=.github,venv

      - name: Run tests
        run: |
          pip install pytest pip-audit
          pytest --maxfail=1 --disable-warnings -q

      - name: Security audit
        run: |
          pip-audit --ignore-in-use

  build-docker:
    name: Build Docker Image
    needs: lint-test-security
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: modulo-ia-core:ci-latest
